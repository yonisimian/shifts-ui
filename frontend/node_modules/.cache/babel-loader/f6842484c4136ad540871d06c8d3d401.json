{"ast":null,"code":"var _jsxFileName = \"/home/guys/Documents/shifts-ui/src/components/page-management/constraction-table/Table.js\";\nimport React, { useState, useEffect } from 'react';\nimport Row from './Table Row';\nimport Table from 'react-bootstrap/Table';\nimport _ from 'lodash';\nimport { myConfig } from '../../../config';\n\nfunction App(props) {\n  //const bakarimDB = props.bakarim == undefined ? [] : props.bakarim\n  const bakarim = props.bakarim.map(value => value.full_name);\n  const defaultConstraints = Array.from(Array(21).keys()).map(i => bakarim);\n  const defaultUnavailable = Array.from(Array(21).keys()).map(i => []);\n  let constraints = defaultConstraints;\n  let unavailable = defaultUnavailable; // suggestions = constraints - unavailable\n\n  const [suggestions, setSuggestions] = useState(defaultConstraints);\n  let curState = defaultUnavailable; // tracking the table\n\n  const upsert = (array, list) => {\n    list.forEach(item => {\n      let i = array.findIndex(_item => _item.id === item.id);\n      if (i === -1) array.push(item);\n    });\n  };\n\n  const updateUnavailable = id => {\n    let unAv = [];\n    let min = Math.max(id - 2, 0);\n    let max = Math.min(id + 2, 20);\n    Array.from(Array(max - min + 1).keys()).map(i => upsert(unAv, curState[i + min]));\n    unavailable[id] = unAv;\n  };\n\n  const handleChange = (values, shiftID) => {\n    return null;\n    curState[shiftID] = values === null ? [] : values.map(val => val.value);\n    let min = Math.max(shiftID - 2, 0);\n    let max = Math.min(shiftID + 2, 20);\n    Array.from(Array(max - min + 1).keys()).map(i => {\n      updateUnavailable(i + min);\n    });\n    alert(JSON.stringify(curState)); ///////////////////////////////////////////////////////////\n    //                                                       //\n    //   for some reason, curState is affected by line 34.   //\n    //   I don't understand why. fuck this.                  //\n    //                                                       //\n    ///////////////////////////////////////////////////////////\n\n    let newSuggestions = constraints.map((list, shiftNumber) => _.difference(list, unavailable[shiftNumber]));\n    setSuggestions(newSuggestions);\n  };\n\n  const updateTable = ignore => {\n    curState = defaultUnavailable;\n    unavailable = defaultUnavailable;\n\n    if (ignore) {\n      constraints = defaultConstraints;\n      setSuggestions(defaultConstraints);\n    } else {\n      try {\n        let bakarimLists = Array.from(Array(21).keys()).map(i => bakarim.filter(bakar => props.data.filter(v => v.name === bakar)[0].shifts[i] == null));\n        constraints = bakarimLists;\n        setSuggestions(bakarimLists);\n        bakarimLists.map(list => list.length === 0 ? props.setShowAlert2(true) : void 0);\n      } catch (error) {\n        constraints = defaultConstraints;\n        unavailable = defaultUnavailable;\n        setSuggestions(defaultConstraints);\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateTable(props.ignore);\n  }, [props.week, props.ignore]);\n  const shifts = myConfig.shift_kinds;\n  const days = myConfig.days_long;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"q\",\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), days.map(day => /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, day))), shifts.map(shift => /*#__PURE__*/React.createElement(Row, {\n    header: shift,\n    myConfig: myConfig,\n    week: props.week,\n    bakarim: suggestions,\n    dictionary: props.dictionary,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/guys/Documents/shifts-ui/src/components/page-management/constraction-table/Table.js"],"names":["React","useState","useEffect","Row","Table","_","myConfig","App","props","bakarim","map","value","full_name","defaultConstraints","Array","from","keys","i","defaultUnavailable","constraints","unavailable","suggestions","setSuggestions","curState","upsert","array","list","forEach","item","findIndex","_item","id","push","updateUnavailable","unAv","min","Math","max","handleChange","values","shiftID","val","alert","JSON","stringify","newSuggestions","shiftNumber","difference","updateTable","ignore","bakarimLists","filter","bakar","data","v","name","shifts","length","setShowAlert2","error","week","shift_kinds","days","days_long","day","shift","dictionary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,KAAK,IAAIA,KAAK,CAACC,SAAjC,CAAhB;AACA,QAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BN,GAA7B,CAAiCO,CAAC,IAAIR,OAAtC,CAA3B;AACA,QAAMS,kBAAkB,GAAGJ,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BN,GAA7B,CAAiCO,CAAC,IAAI,EAAtC,CAA3B;AAEA,MAAIE,WAAW,GAAGN,kBAAlB;AACA,MAAIO,WAAW,GAAGF,kBAAlB,CAPkB,CAQlB;;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAACY,kBAAD,CAA9C;AACA,MAAIU,QAAQ,GAAGL,kBAAf,CAVkB,CAUgB;;AAElC,QAAMM,MAAM,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC9BA,IAAAA,IAAI,CAACC,OAAL,CAAaC,IAAI,IAAI;AACnB,UAAIX,CAAC,GAAGQ,KAAK,CAACI,SAAN,CAAgBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaH,IAAI,CAACG,EAA3C,CAAR;AACA,UAAId,CAAC,KAAK,CAAC,CAAX,EAAcQ,KAAK,CAACO,IAAN,CAAWJ,IAAX;AACf,KAHD;AAID,GALD;;AAOA,QAAMK,iBAAiB,GAAIF,EAAD,IAAQ;AAChC,QAAIG,IAAI,GAAG,EAAX;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASN,EAAE,GAAG,CAAd,EAAiB,CAAjB,CAAV;AACA,QAAIM,GAAG,GAAGD,IAAI,CAACD,GAAL,CAASJ,EAAE,GAAG,CAAd,EAAiB,EAAjB,CAAV;AACAjB,IAAAA,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACuB,GAAG,GAAGF,GAAN,GAAY,CAAb,CAAL,CAAqBnB,IAArB,EAAX,EAAwCN,GAAxC,CAA4CO,CAAC,IAC3CO,MAAM,CAACU,IAAD,EAAOX,QAAQ,CAACN,CAAC,GAAGkB,GAAL,CAAf,CADR;AAIAf,IAAAA,WAAW,CAACW,EAAD,CAAX,GAAkBG,IAAlB;AACD,GATD;;AAWA,QAAMI,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACxC,WAAO,IAAP;AACAjB,IAAAA,QAAQ,CAACiB,OAAD,CAAR,GAAqBD,MAAM,KAAK,IAAZ,GAAoB,EAApB,GAAyBA,MAAM,CAAC7B,GAAP,CAAW+B,GAAG,IAAIA,GAAG,CAAC9B,KAAtB,CAA7C;AACA,QAAIwB,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASG,OAAO,GAAG,CAAnB,EAAsB,CAAtB,CAAV;AACA,QAAIH,GAAG,GAAGD,IAAI,CAACD,GAAL,CAASK,OAAO,GAAG,CAAnB,EAAsB,EAAtB,CAAV;AACA1B,IAAAA,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACuB,GAAG,GAAGF,GAAN,GAAY,CAAb,CAAL,CAAqBnB,IAArB,EAAX,EAAwCN,GAAxC,CAA4CO,CAAC,IAAI;AAC/CgB,MAAAA,iBAAiB,CAAChB,CAAC,GAAGkB,GAAL,CAAjB;AACD,KAFD;AAGAO,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAerB,QAAf,CAAD,CAAL,CARwC,CASxC;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAIsB,cAAc,GAAG1B,WAAW,CAACT,GAAZ,CAAgB,CAACgB,IAAD,EAAOoB,WAAP,KACnCzC,CAAC,CAAC0C,UAAF,CAAarB,IAAb,EAAmBN,WAAW,CAAC0B,WAAD,CAA9B,CADmB,CAArB;AAGAxB,IAAAA,cAAc,CAACuB,cAAD,CAAd;AACD,GArBD;;AAuBA,QAAMG,WAAW,GAAIC,MAAD,IAAY;AAC9B1B,IAAAA,QAAQ,GAAGL,kBAAX;AACAE,IAAAA,WAAW,GAAGF,kBAAd;;AAEA,QAAI+B,MAAJ,EACA;AACI9B,MAAAA,WAAW,GAAGN,kBAAd;AACAS,MAAAA,cAAc,CAACT,kBAAD,CAAd;AACH,KAJD,MAMA;AACE,UAAI;AACF,YAAIqC,YAAY,GAAGpC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAChBN,GADgB,CACZO,CAAC,IAAIR,OAAO,CAChB0C,MADS,CACFC,KAAK,IAAI5C,KAAK,CAAC6C,IAAN,CAChBF,MADgB,CACTG,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWH,KADP,EACc,CADd,EACiBI,MADjB,CACwBvC,CADxB,KAC4B,IAFnC,CADO,CAAnB;AAIAE,QAAAA,WAAW,GAAG+B,YAAd;AACA5B,QAAAA,cAAc,CAAC4B,YAAD,CAAd;AACAA,QAAAA,YAAY,CAACxC,GAAb,CAAiBgB,IAAI,IAAIA,IAAI,CAAC+B,MAAL,KAAgB,CAAhB,GAAoBjD,KAAK,CAACkD,aAAN,CAAoB,IAApB,CAApB,GAAgD,KAAK,CAA9E;AACD,OARD,CASA,OAAOC,KAAP,EAAc;AACZxC,QAAAA,WAAW,GAAGN,kBAAd;AACAO,QAAAA,WAAW,GAAGF,kBAAd;AACAI,QAAAA,cAAc,CAACT,kBAAD,CAAd;AACD;AACF;AACF,GA1BD;;AA4BAX,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,WAAW,CAACxC,KAAK,CAACyC,MAAP,CAAX;AACD,GAFQ,EAEN,CAACzC,KAAK,CAACoD,IAAP,EAAapD,KAAK,CAACyC,MAAnB,CAFM,CAAT;AAIA,QAAMO,MAAM,GAAGlD,QAAQ,CAACuD,WAAxB;AACA,QAAMC,IAAI,GAAGxD,QAAQ,CAACyD,SAAtB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,GAAjB;AAAqB,IAAA,OAAO,MAA5B;AAA6B,IAAA,QAAQ,MAArC;AAAsC,IAAA,KAAK,MAA3C;AAA4C,IAAA,IAAI,EAAC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,IAAI,CAACpD,GAAL,CAAUsD,GAAD,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAL,CADD,CAFH,CADF,EAOGR,MAAM,CAAC9C,GAAP,CAAYuD,KAAD,iBACV,oBAAC,GAAD;AACE,IAAA,MAAM,EAAEA,KADV;AAEE,IAAA,QAAQ,EAAE3D,QAFZ;AAGE,IAAA,IAAI,EAAEE,KAAK,CAACoD,IAHd;AAIE,IAAA,OAAO,EAAEvC,WAJX;AAKE,IAAA,UAAU,EAAEb,KAAK,CAAC0D,UALpB;AAME,IAAA,YAAY,EAAE5B,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADF,CADF;AAqBD;;AAED,eAAe/B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Row from './Table Row'\nimport Table from 'react-bootstrap/Table'\nimport _ from 'lodash'\nimport { myConfig } from '../../../config'\n\nfunction App(props) {\n  //const bakarimDB = props.bakarim == undefined ? [] : props.bakarim\n  const bakarim = props.bakarim.map(value => value.full_name)\n  const defaultConstraints = Array.from(Array(21).keys()).map(i => bakarim)\n  const defaultUnavailable = Array.from(Array(21).keys()).map(i => [])\n\n  let constraints = defaultConstraints\n  let unavailable = defaultUnavailable\n  // suggestions = constraints - unavailable\n  const [suggestions, setSuggestions] = useState(defaultConstraints)\n  let curState = defaultUnavailable // tracking the table\n\n  const upsert = (array, list) => {\n    list.forEach(item => {\n      let i = array.findIndex(_item => _item.id === item.id)\n      if (i === -1) array.push(item)\n    })\n  }\n\n  const updateUnavailable = (id) => {\n    let unAv = []\n    let min = Math.max(id - 2, 0)\n    let max = Math.min(id + 2, 20)\n    Array.from(Array(max - min + 1).keys()).map(i => \n      upsert(unAv, curState[i + min])\n    )\n\n    unavailable[id] = unAv\n  }\n\n  const handleChange = (values, shiftID) => {\n    return null\n    curState[shiftID] = (values === null) ? [] : values.map(val => val.value)\n    let min = Math.max(shiftID - 2, 0)\n    let max = Math.min(shiftID + 2, 20)\n    Array.from(Array(max - min + 1).keys()).map(i => {\n      updateUnavailable(i + min) \n    })\n    alert(JSON.stringify(curState))\n    ///////////////////////////////////////////////////////////\n    //                                                       //\n    //   for some reason, curState is affected by line 34.   //\n    //   I don't understand why. fuck this.                  //\n    //                                                       //\n    ///////////////////////////////////////////////////////////\n\n    \n    let newSuggestions = constraints.map((list, shiftNumber) =>\n      _.difference(list, unavailable[shiftNumber])\n    )\n    setSuggestions(newSuggestions)\n  }\n\n  const updateTable = (ignore) => {\n    curState = defaultUnavailable\n    unavailable = defaultUnavailable\n\n    if (ignore)\n    {\n        constraints = defaultConstraints\n        setSuggestions(defaultConstraints)\n    }\n    else\n    {\n      try {\n        let bakarimLists = Array.from(Array(21).keys())\n          .map(i => bakarim\n          .filter(bakar => props.data\n          .filter(v => v.name === bakar)[0].shifts[i]==null))\n        constraints = bakarimLists\n        setSuggestions(bakarimLists)\n        bakarimLists.map(list => list.length === 0 ? props.setShowAlert2(true) : void 0)\n      }\n      catch (error) {\n        constraints = defaultConstraints\n        unavailable = defaultUnavailable\n        setSuggestions(defaultConstraints)\n      }    \n    }\n  }\n\n  useEffect(() => {\n    updateTable(props.ignore)\n  }, [props.week, props.ignore])\n\n  const shifts = myConfig.shift_kinds\n  const days = myConfig.days_long\n\n  return (\n    <div>\n      <Table className=\"q\" striped bordered hover size=\"sm\">\n        <tr>\n          <th></th>\n          {days.map((day) => \n            <th>{day}</th>\n          )}\n        </tr>\n        {shifts.map((shift) =>\n          <Row\n            header={shift}\n            myConfig={myConfig}\n            week={props.week}\n            bakarim={suggestions}\n            dictionary={props.dictionary}\n            handleChange={handleChange}/>\n        )}\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}