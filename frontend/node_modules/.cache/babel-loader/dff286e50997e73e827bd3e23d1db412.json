{"ast":null,"code":"var _jsxFileName = \"/home/guys/Documents/shifts-ui/src/components/general/Pagination.js\";\nimport React from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\n\nfunction App(props) {\n  const {\n    items,\n    itemsPerPage,\n    curPage,\n    setCurPage,\n    pagesPerSection,\n    curSection,\n    setCurSection\n  } = props;\n  const maxPage = Math.max(0, Math.floor((items.length - 1) / itemsPerPage));\n  const maxSection = Math.max(0, Math.floor((maxPage - 1) / pagesPerSection));\n\n  const setFirstPage = () => {\n    setCurPage(0);\n    setCurSection(0);\n  };\n\n  const setPrevPage = () => {\n    let newPage = Math.max(curPage - 1, 0);\n    setCurPage(newPage);\n    setCurSection(Math.floor(newPage / pagesPerSection));\n  };\n\n  const setPrevSection = () => {\n    let newSection = Math.max(curSection - 1, 0);\n    setCurSection(newSection);\n    setCurPage((newSection + 1) * pagesPerSection - 1);\n  };\n\n  const setNextSection = () => {\n    let newSection = Math.min(curSection + 1, maxSection);\n    setCurSection(newSection);\n    setCurPage(newSection * pagesPerSection);\n  };\n\n  const setNextPage = () => {\n    let newPage = Math.min(curPage + 1, maxPage);\n    setCurPage(newPage);\n    setCurSection(Math.floor(newPage / pagesPerSection));\n  };\n\n  const setLastPage = () => {\n    setCurPage(maxPage);\n    setCurSection(maxSection);\n  };\n\n  return /*#__PURE__*/React.createElement(Pagination, {\n    dir: \"ltr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination.First, {\n    onClick: setFirstPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: setPrevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), curSection !== 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination.Item, {\n    key: 0,\n    active: 0 === curPage,\n    onClick: () => setCurPage(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, 1), /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n    onClick: setPrevSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), items.filter((shift, shiftID) => shiftID % itemsPerPage === 0).filter((shift, page) => page < pagesPerSection * (curSection + 1) && page >= pagesPerSection * curSection).map((shift, index) => /*#__PURE__*/React.createElement(Pagination.Item, {\n    key: index + curSection * pagesPerSection,\n    active: index + curSection * pagesPerSection === curPage,\n    onClick: () => setCurPage(index + curSection * pagesPerSection),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, index + curSection * pagesPerSection + 1)), curSection !== maxSection && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n    onClick: setNextSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Item, {\n    key: maxPage,\n    active: maxPage === curPage,\n    onClick: () => setCurPage(maxPage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, maxPage + 1)), /*#__PURE__*/React.createElement(Pagination.Next, {\n    onClick: setNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Last, {\n    onClick: setLastPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/guys/Documents/shifts-ui/src/components/general/Pagination.js"],"names":["React","Pagination","App","props","items","itemsPerPage","curPage","setCurPage","pagesPerSection","curSection","setCurSection","maxPage","Math","max","floor","length","maxSection","setFirstPage","setPrevPage","newPage","setPrevSection","newSection","setNextSection","min","setNextPage","setLastPage","filter","shift","shiftID","page","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination'\n\nfunction App(props) {\n    const {items, itemsPerPage, curPage, setCurPage, pagesPerSection, curSection, setCurSection} = props\n    const maxPage = Math.max(0, Math.floor((items.length - 1) / itemsPerPage))\n    const maxSection = Math.max(0, Math.floor((maxPage - 1) / pagesPerSection))\n\n    const setFirstPage = () => {\n        setCurPage(0)\n        setCurSection(0)\n    }\n\n    const setPrevPage = () => {\n        let newPage = Math.max(curPage - 1, 0)\n        setCurPage(newPage)\n        setCurSection(Math.floor(newPage / pagesPerSection))\n    }\n\n    const setPrevSection = () => {\n        let newSection = Math.max(curSection - 1, 0)\n        setCurSection(newSection)\n        setCurPage((newSection + 1) * pagesPerSection - 1)\n    }\n\n    const setNextSection = () => {\n        let newSection = Math.min(curSection + 1, maxSection)\n        setCurSection(newSection)\n        setCurPage(newSection * pagesPerSection)\n    }\n\n    const setNextPage = () => {\n        let newPage = Math.min(curPage + 1, maxPage)\n        setCurPage(newPage)\n        setCurSection(Math.floor(newPage / pagesPerSection))\n    }\n\n    const setLastPage = () => {\n        setCurPage(maxPage)\n        setCurSection(maxSection)\n    }\n\n    return (\n        <Pagination dir=\"ltr\">\n            <Pagination.First onClick={setFirstPage} />\n            <Pagination.Prev onClick={setPrevPage} />\n            {curSection !== 0 &&\n                <>\n                    <Pagination.Item\n                        key={0}\n                        active={0 === curPage}\n                        onClick={() => setCurPage(0)}>\n                            {1}\n                    </Pagination.Item>\n                    <Pagination.Ellipsis onClick={setPrevSection} />\n                </>\n            }\n            {items.filter((shift, shiftID) => shiftID % itemsPerPage === 0)\n                    .filter((shift, page) => page < pagesPerSection * (curSection + 1) && page >= pagesPerSection * curSection)\n                    .map((shift, index) =>\n                <Pagination.Item\n                    key={index + (curSection * pagesPerSection)}\n                    active={(index + (curSection * pagesPerSection)) === curPage}\n                    onClick={() => setCurPage(index + (curSection * pagesPerSection))}>\n                        {index + (curSection * pagesPerSection) + 1}\n                </Pagination.Item>\n            )}\n            {curSection !== maxSection &&\n                <>\n                    <Pagination.Ellipsis onClick={setNextSection} />\n                    <Pagination.Item\n                        key={maxPage}\n                        active={(maxPage) === curPage}\n                        onClick={() => setCurPage(maxPage)}>\n                            {maxPage + 1}\n                    </Pagination.Item>\n                </>\n            }\n            <Pagination.Next onClick={setNextPage} />\n            <Pagination.Last onClick={setLastPage} />\n        </Pagination>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}